
PRODA — Легковесный HTTP-сервер на C

Описание
--------
PRODA — это минималистичная реализация HTTP-сервера на языке C, предназначенная для демонстрации ключевых навыков DevOps-инженера начального уровня:
- Сетевое программирование и работа с сокетами
- Логирование событий
- Покрытие кода юнит-тестами
- Работа с Docker и контейнеризацией
- Автоматизация сборки и тестирования через CI/CD
- Использование конфигурационных файлов

Структура проекта
-----------------
- scripts/headers/ — заголовочные файлы
- scripts/src/     — исходный код на C
- dockerfile       — описание Docker-образа
- MakeFile         — сборка и автоматизация
- script.py        — утилиты для деплоя и мониторинга
- info.yaml        — пример конфигурации сервера

Основные возможности
--------------------
- Обработка HTTP-запросов и маршрутизация
- Кроссплатформенная работа (Linux, Windows)
- Простая архитектура для расширения
- Логирование с уровнями (debug, info, warn, error)
- Юнит-тесты для ключевых компонентов
- Сборка и запуск в Docker-контейнере
- Пример CI/CD для автоматизации

Быстрый старт
-------------
1. Клонируйте репозиторий:
   git clone <URL>
   cd proda

2. Соберите проект:
   make

3. Запустите сервер:
   ./bin/proda

4. Проверьте работу:
   curl http://localhost:8080/
   curl http://localhost:8080/scream

5. Запустите тесты:
   make test

6. Соберите и запустите в Docker:
   docker build -t proda-server .
   docker run -p 8080:8080 proda-server

7. Деплой и мониторинг:
   python script.py --deploy
   python script.py --monitor

CI/CD
-----
В проекте приведён пример workflow для GitHub Actions. Автоматически выполняется сборка, тестирование и сборка Docker-образа при каждом пуше.

Конфигурация
------------
Параметры сервера и маршрутов задаются в файле info.yaml. Пример приведён в репозитории.

Назначение
----------
Этот проект предназначен для демонстрации навыков DevOps junior:
- Понимание сетевого взаимодействия и протокола HTTP # подразумевается естественно также и знание остальных базовых понятий по типу dns и https
- Умение писать и тестировать код на C
- Настройка логирования и тестирования
- Работа с Docker и автоматизацией CI/CD
- Использование конфигурационных файлов